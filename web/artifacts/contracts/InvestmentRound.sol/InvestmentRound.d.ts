// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface InvestmentRound$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "InvestmentRound",
  "sourceName": "contracts/InvestmentRound.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_roundNameHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_termsHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "borrower",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_investor",
          "type": "address"
        }
      ],
      "name": "getInvestorInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoundStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTermsHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roundNameHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roundOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signTerms",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "termsHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60e060405234801561001057600080fd5b50604051610c6e380380610c6e833981810160405281019061003291906100d2565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160a081815250508060c0818152505060016000806101000a81548160ff0219169083151502179055505050610112565b600080fd5b6000819050919050565b6100af8161009c565b81146100ba57600080fd5b50565b6000815190506100cc816100a6565b92915050565b600080604083850312156100e9576100e8610097565b5b60006100f7858286016100bd565b9250506020610108858286016100bd565b9150509250929050565b60805160a05160c051610b1f61014f6000396000818161050e0152610631015260006102fe0152600081816104ca01526105380152610b1f6000f3fe6080604052600436106100a75760003560e01c806386b945b01161006457806386b945b0146101b1578063960524e3146101dc578063b311d9fd14610207578063d7e64c0014610232578063e278fe6f1461025d578063e52ec50414610274576100a7565b80630707873c146100ac5780632032677f146100e95780633f2d0b7814610114578063459aeb5e1461013f5780636f7bc9be146101495780637df1f1b914610186575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906106b8565b61029f565b6040516100e091906106fe565b60405180910390f35b3480156100f557600080fd5b506100fe6102eb565b60405161010b9190610734565b60405180910390f35b34801561012057600080fd5b506101296102fc565b6040516101369190610768565b60405180910390f35b610147610320565b005b34801561015557600080fd5b50610170600480360381019061016b91906106b8565b6104aa565b60405161017d91906106fe565b60405180910390f35b34801561019257600080fd5b5061019b6104c8565b6040516101a89190610792565b60405180910390f35b3480156101bd57600080fd5b506101c66104ec565b6040516101d39190610734565b60405180910390f35b3480156101e857600080fd5b506101f1610502565b6040516101fe91906106fe565b60405180910390f35b34801561021357600080fd5b5061021c61050c565b6040516102299190610768565b60405180910390f35b34801561023e57600080fd5b50610247610530565b60405161025491906106fe565b60405180910390f35b34801561026957600080fd5b50610272610536565b005b34801561028057600080fd5b5061028961062d565b6040516102969190610768565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60008054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900460ff1661036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610830565b60405180910390fd5b600034116103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a7906108c2565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c90610954565b60405180910390fd5b604051806020016040528034815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155905050600260008154809291906104a3906109a3565b9190505550565b60016020528060005260406000206000915090508060000154905081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900460ff16905090565b6000600254905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610a5d565b60405180910390fd5b60008054906101000a900460ff16610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060890610ac9565b60405180910390fd5b60008060006101000a81548160ff021916908315150217905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106858261065a565b9050919050565b6106958161067a565b81146106a057600080fd5b50565b6000813590506106b28161068c565b92915050565b6000602082840312156106ce576106cd610655565b5b60006106dc848285016106a3565b91505092915050565b6000819050919050565b6106f8816106e5565b82525050565b600060208201905061071360008301846106ef565b92915050565b60008115159050919050565b61072e81610719565b82525050565b60006020820190506107496000830184610725565b92915050565b6000819050919050565b6107628161074f565b82525050565b600060208201905061077d6000830184610759565b92915050565b61078c8161067a565b82525050565b60006020820190506107a76000830184610783565b92915050565b600082825260208201905092915050565b7f526f756e6420697320636c6f73656420616e642063616e6e6f7420616363657060008201527f74206e657720696e766573746f72732e00000000000000000000000000000000602082015250565b600061081a6030836107ad565b9150610825826107be565b604082019050919050565b600060208201905081810360008301526108498161080d565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006108ac6021836107ad565b91506108b782610850565b604082019050919050565b600060208201905081810360008301526108db8161089f565b9050919050565b7f596f75206861766520616c7265616479207369676e656420746865207465726d60008201527f732e000000000000000000000000000000000000000000000000000000000000602082015250565b600061093e6022836107ad565b9150610949826108e2565b604082019050919050565b6000602082019050818103600083015261096d81610931565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ae826106e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109e0576109df610974565b5b600182019050919050565b7f4f6e6c792074686520626f72726f7765722063616e2063616c6c20746869732060008201527f66756e6374696f6e2e0000000000000000000000000000000000000000000000602082015250565b6000610a476029836107ad565b9150610a52826109eb565b604082019050919050565b60006020820190508181036000830152610a7681610a3a565b9050919050565b7f526f756e6420697320616c726561647920636c6f7365642e0000000000000000600082015250565b6000610ab36018836107ad565b9150610abe82610a7d565b602082019050919050565b60006020820190508181036000830152610ae281610aa6565b905091905056fea264697066735822122081e5d2f1c5a309043e2413e58e0188792451833f1888bed2c9400351826bc77a64736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c806386b945b01161006457806386b945b0146101b1578063960524e3146101dc578063b311d9fd14610207578063d7e64c0014610232578063e278fe6f1461025d578063e52ec50414610274576100a7565b80630707873c146100ac5780632032677f146100e95780633f2d0b7814610114578063459aeb5e1461013f5780636f7bc9be146101495780637df1f1b914610186575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906106b8565b61029f565b6040516100e091906106fe565b60405180910390f35b3480156100f557600080fd5b506100fe6102eb565b60405161010b9190610734565b60405180910390f35b34801561012057600080fd5b506101296102fc565b6040516101369190610768565b60405180910390f35b610147610320565b005b34801561015557600080fd5b50610170600480360381019061016b91906106b8565b6104aa565b60405161017d91906106fe565b60405180910390f35b34801561019257600080fd5b5061019b6104c8565b6040516101a89190610792565b60405180910390f35b3480156101bd57600080fd5b506101c66104ec565b6040516101d39190610734565b60405180910390f35b3480156101e857600080fd5b506101f1610502565b6040516101fe91906106fe565b60405180910390f35b34801561021357600080fd5b5061021c61050c565b6040516102299190610768565b60405180910390f35b34801561023e57600080fd5b50610247610530565b60405161025491906106fe565b60405180910390f35b34801561026957600080fd5b50610272610536565b005b34801561028057600080fd5b5061028961062d565b6040516102969190610768565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60008054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900460ff1661036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610830565b60405180910390fd5b600034116103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a7906108c2565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c90610954565b60405180910390fd5b604051806020016040528034815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155905050600260008154809291906104a3906109a3565b9190505550565b60016020528060005260406000206000915090508060000154905081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900460ff16905090565b6000600254905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610a5d565b60405180910390fd5b60008054906101000a900460ff16610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060890610ac9565b60405180910390fd5b60008060006101000a81548160ff021916908315150217905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106858261065a565b9050919050565b6106958161067a565b81146106a057600080fd5b50565b6000813590506106b28161068c565b92915050565b6000602082840312156106ce576106cd610655565b5b60006106dc848285016106a3565b91505092915050565b6000819050919050565b6106f8816106e5565b82525050565b600060208201905061071360008301846106ef565b92915050565b60008115159050919050565b61072e81610719565b82525050565b60006020820190506107496000830184610725565b92915050565b6000819050919050565b6107628161074f565b82525050565b600060208201905061077d6000830184610759565b92915050565b61078c8161067a565b82525050565b60006020820190506107a76000830184610783565b92915050565b600082825260208201905092915050565b7f526f756e6420697320636c6f73656420616e642063616e6e6f7420616363657060008201527f74206e657720696e766573746f72732e00000000000000000000000000000000602082015250565b600061081a6030836107ad565b9150610825826107be565b604082019050919050565b600060208201905081810360008301526108498161080d565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006108ac6021836107ad565b91506108b782610850565b604082019050919050565b600060208201905081810360008301526108db8161089f565b9050919050565b7f596f75206861766520616c7265616479207369676e656420746865207465726d60008201527f732e000000000000000000000000000000000000000000000000000000000000602082015250565b600061093e6022836107ad565b9150610949826108e2565b604082019050919050565b6000602082019050818103600083015261096d81610931565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ae826106e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109e0576109df610974565b5b600182019050919050565b7f4f6e6c792074686520626f72726f7765722063616e2063616c6c20746869732060008201527f66756e6374696f6e2e0000000000000000000000000000000000000000000000602082015250565b6000610a476029836107ad565b9150610a52826109eb565b604082019050919050565b60006020820190508181036000830152610a7681610a3a565b9050919050565b7f526f756e6420697320616c726561647920636c6f7365642e0000000000000000600082015250565b6000610ab36018836107ad565b9150610abe82610a7d565b602082019050919050565b60006020820190508181036000830152610ae281610aa6565b905091905056fea264697066735822122081e5d2f1c5a309043e2413e58e0188792451833f1888bed2c9400351826bc77a64736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "InvestmentRound",
    constructorArgs: [_roundNameHash: AbiParameterToPrimitiveType<{"name":"_roundNameHash","type":"bytes32"}>, _termsHash: AbiParameterToPrimitiveType<{"name":"_termsHash","type":"bytes32"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<InvestmentRound$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/InvestmentRound.sol:InvestmentRound",
    constructorArgs: [_roundNameHash: AbiParameterToPrimitiveType<{"name":"_roundNameHash","type":"bytes32"}>, _termsHash: AbiParameterToPrimitiveType<{"name":"_termsHash","type":"bytes32"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<InvestmentRound$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "InvestmentRound",
    constructorArgs: [_roundNameHash: AbiParameterToPrimitiveType<{"name":"_roundNameHash","type":"bytes32"}>, _termsHash: AbiParameterToPrimitiveType<{"name":"_termsHash","type":"bytes32"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<InvestmentRound$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/InvestmentRound.sol:InvestmentRound",
    constructorArgs: [_roundNameHash: AbiParameterToPrimitiveType<{"name":"_roundNameHash","type":"bytes32"}>, _termsHash: AbiParameterToPrimitiveType<{"name":"_termsHash","type":"bytes32"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<InvestmentRound$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "InvestmentRound",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<InvestmentRound$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/InvestmentRound.sol:InvestmentRound",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<InvestmentRound$Type["abi"]>>;
}
